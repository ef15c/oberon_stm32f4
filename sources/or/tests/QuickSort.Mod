MODULE QuickSort;
  TYPE
    Item* = POINTER TO ItemPayload;
    ItemPayload* = RECORD
    END;
    
    LT* = PROCEDURE(a, b: Item): BOOLEAN;
    
  PROCEDURE doSort(VAR a: ARRAY OF Item; L, R: INTEGER; cmp: LT);
    VAR i, j: INTEGER; w, x: Item;
  BEGIN
    i := L; j := R;
    x := a[(L+R) DIV 2];
    REPEAT
      WHILE cmp(a[i], x) DO i := i+1 END;
      WHILE cmp(x, a[j]) DO j := j-1 END;
      IF i <= j THEN
        w := a[i]; a[i] := a[j]; a[j] := w;
        i := i+1; j := j-1
      END
    UNTIL i > j;
    IF L < j THEN doSort(a, L, j, cmp) END;
    IF i < R THEN doSort(a, i, R, cmp) END
  END doSort;

  PROCEDURE Sort*(VAR a: ARRAY OF Item; cmp: LT);
  BEGIN
    doSort(a, 0, LEN(a)-1, cmp)
  END Sort;

END QuickSort.

(*

OM4Tool.DecObj QuickSort.m4c ~

decode QuickSort.m4c
QuickSort 6C618B42   1   376
imports:
type descriptors
 00000020 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
data     0
strings

code
commands:
entries
   326     0   296
pointer refs

fixP =        0
fixD =        0
fixT =        0
entry =      326
 00000000	 F1BD0D10	SUBS SP SP #16
 00000004	     B41F	PUSH R0 R1 R2 R3 R4
 00000006	     B500	PUSH LR
 00000008	     9803	LDR R0 [SP + 12]
 0000000A	     9006	STR R0 [SP + 24]
 0000000C	     9804	LDR R0 [SP + 16]
 0000000E	     9007	STR R0 [SP + 28]
 00000010	     9803	LDR R0 [SP + 12]
 00000012	     9904	LDR R1 [SP + 16]
 00000014	     1840	ADDS R0 R0 R1
 00000016	     1040	ASRS R0 R0 #1
 00000018	     9902	LDR R1 [SP + 8]
 0000001A	     4288	CMP R0 R1
 0000001C	     BF28	IT CS
 0000001E	 EC002381	TrapCS 1 at pos 312
 00000022	     9901	LDR R1 [SP + 4]
 00000024	 EB110080	ADDS R0 R1 R0 LSL #2
 00000028	     6800	LDR R0 [ R0 + 0]
 0000002A	     9009	STR R0 [SP + 36]
 0000002C	     9806	LDR R0 [SP + 24]
 0000002E	     9902	LDR R1 [SP + 8]
 00000030	     4288	CMP R0 R1
 00000032	     BF28	IT CS
 00000034	 EC0025B1	TrapCS 1 at pos 347
 00000038	     9901	LDR R1 [SP + 4]
 0000003A	 EB110080	ADDS R0 R1 R0 LSL #2
 0000003E	     6800	LDR R0 [ R0 + 0]
 00000040	     9909	LDR R1 [SP + 36]
 00000042	     9A05	LDR R2 [SP + 20]
 00000044	     4790	BLX R2
 00000046	     2800	CMP R0 #0
 00000048	 F0008004	BEQ #8, goes to  00000054
 0000004C	     9806	LDR R0 [SP + 24]
 0000004E	     1C40	ADDS R0 R0 #1
 00000050	     9006	STR R0 [SP + 24]
 00000052	     E7EB	B #-42, goes to  0000002C
 00000054	     9809	LDR R0 [SP + 36]
 00000056	     9907	LDR R1 [SP + 28]
 00000058	     9A02	LDR R2 [SP + 8]
 0000005A	     4291	CMP R1 R2
 0000005C	     BF28	IT CS
 0000005E	 EC003091	TrapCS 1 at pos 393
 00000062	     9A01	LDR R2 [SP + 4]
 00000064	 EB120181	ADDS R1 R2 R1 LSL #2
 00000068	     6809	LDR R1 [ R1 + 0]
 0000006A	     9A05	LDR R2 [SP + 20]
 0000006C	     4790	BLX R2
 0000006E	     2800	CMP R0 #0
 00000070	 F0008004	BEQ #8, goes to  0000007C
 00000074	     9807	LDR R0 [SP + 28]
 00000076	     1E40	SUBS R0 R0 #1
 00000078	     9007	STR R0 [SP + 28]
 0000007A	     E7EB	B #-42, goes to  00000054
 0000007C	     9806	LDR R0 [SP + 24]
 0000007E	     9907	LDR R1 [SP + 28]
 00000080	     4288	CMP R0 R1
 00000082	 F3008030	BGT #96, goes to  000000E6
 00000086	     9806	LDR R0 [SP + 24]
 00000088	     9902	LDR R1 [SP + 8]
 0000008A	     4288	CMP R0 R1
 0000008C	     BF28	IT CS
 0000008E	 EC003441	TrapCS 1 at pos 452
 00000092	     9901	LDR R1 [SP + 4]
 00000094	 EB110080	ADDS R0 R1 R0 LSL #2
 00000098	     6800	LDR R0 [ R0 + 0]
 0000009A	     9008	STR R0 [SP + 32]
 0000009C	     9806	LDR R0 [SP + 24]
0000009E	     9902	LDR R1 [SP + 8]
 000000A0	     4288	CMP R0 R1
 000000A2	     BF28	IT CS
 000000A4	 EC0034A1	TrapCS 1 at pos 458
 000000A8	     9901	LDR R1 [SP + 4]
 000000AA	 EB110080	ADDS R0 R1 R0 LSL #2
 000000AE	     9907	LDR R1 [SP + 28]
 000000B0	     9A02	LDR R2 [SP + 8]
 000000B2	     4291	CMP R1 R2
 000000B4	     BF28	IT CS
 000000B6	 EC003521	TrapCS 1 at pos 466
 000000BA	     9A01	LDR R2 [SP + 4]
 000000BC	 EB120181	ADDS R1 R2 R1 LSL #2
 000000C0	     6809	LDR R1 [ R1 + 0]
 000000C2	     6001	STR R1 [ R0 + 0]
 000000C4	     9807	LDR R0 [SP + 28]
 000000C6	     9902	LDR R1 [SP + 8]
 000000C8	     4288	CMP R0 R1
 000000CA	     BF28	IT CS
 000000CC	 EC003581	TrapCS 1 at pos 472
 000000D0	     9901	LDR R1 [SP + 4]
 000000D2	 EB110080	ADDS R0 R1 R0 LSL #2
 000000D6	     9908	LDR R1 [SP + 32]
 000000D8	     6001	STR R1 [ R0 + 0]
 000000DA	     9806	LDR R0 [SP + 24]
 000000DC	     1C40	ADDS R0 R0 #1
 000000DE	     9006	STR R0 [SP + 24]
 000000E0	     9807	LDR R0 [SP + 28]
 000000E2	     1E40	SUBS R0 R0 #1
 000000E4	     9007	STR R0 [SP + 28]
 000000E6	     9806	LDR R0 [SP + 24]
 000000E8	     9907	LDR R1 [SP + 28]
 000000EA	     4288	CMP R0 R1
 000000EC	     DD9E	BLE #-196, goes to  0000002C
 000000EE	     9803	LDR R0 [SP + 12]
 000000F0	     9907	LDR R1 [SP + 28]
 000000F2	     4288	CMP R0 R1
 000000F4	 F2808007	BGE #14, goes to  00000106
 000000F8	     9801	LDR R0 [SP + 4]
 000000FA	     9902	LDR R1 [SP + 8]
 000000FC	     9A03	LDR R2 [SP + 12]
 000000FE	     9B07	LDR R3 [SP + 28]
 00000100	     9C05	LDR R4 [SP + 20]
 00000102	 F7FFFF7D	BL #-262, goes to  00000000
 00000106	     9806	LDR R0 [SP + 24]
 00000108	     9904	LDR R1 [SP + 16]
 0000010A	     4288	CMP R0 R1
 0000010C	 F2808007	BGE #14, goes to  0000011E
 00000110	     9801	LDR R0 [SP + 4]
 00000112	     9902	LDR R1 [SP + 8]
 00000114	     9A06	LDR R2 [SP + 24]
 00000116	     9B04	LDR R3 [SP + 16]
 00000118	     9C05	LDR R4 [SP + 20]
 0000011A	 F7FFFF71	BL #-286, goes to  00000000
 0000011E	 F85DEB04	LDR LR [ SP ] + 4
 00000122	 F11D0D24	ADDS SP SP #36
 00000126	     4770	BX LR
 00000128	     B407	PUSH R0 R1 R2
 0000012A	     B500	PUSH LR
 0000012C	     9801	LDR R0 [SP + 4]
 0000012E	     9902	LDR R1 [SP + 8]
 00000130	     2200	MOVS R2 #0
 00000132	     9B02	LDR R3 [SP + 8]
 00000134	     1E5B	SUBS R3 R3 #1
 00000136	     9C03	LDR R4 [SP + 12]
 00000138	 F7FFFF62	BL #-316, goes to  00000000
 0000013C	 F85DEB04	LDR LR [ SP ] + 4
 00000140	 F11D0D0C	ADDS SP SP #12
 00000144	     4770	BX LR
 00000146	     B500	PUSH LR
 00000148	 F85DEB04	LDR LR [ SP ] + 4
 0000014C	     4770	BX LR


*)
