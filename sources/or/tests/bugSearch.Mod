MODULE bugSearch;
  IMPORT Kernel;

  CONST FnLength*    = 32;
        DirRootAdr  = 29;
        FillerSize = 52;
        DirPgSize   = 24;
        DirMark*    = 9B1EA38DH;
        
  TYPE DiskAdr      = INTEGER;
    FileName       = ARRAY FnLength OF CHAR;
  
    DirEntry =  (*B-tree node*)
      RECORD
        name: FileName;
        adr:  DiskAdr; (*sec no of file header*)
        p:    DiskAdr  (*sec no of descendant in directory*)
      END ;

    DirPage  =
      RECORD mark:  INTEGER;
        m:     INTEGER;
        p0:    DiskAdr;  (*sec no of left descendant in directory*)
        fill:  ARRAY FillerSize OF BYTE;
        e:  ARRAY DirPgSize OF DirEntry
      END ;

  PROCEDURE Search*(name: FileName; VAR A: DiskAdr);
    VAR i, L, R: INTEGER; dadr: DiskAdr;
      a: DirPage;
  BEGIN dadr := DirRootAdr; A := 0;
    REPEAT Kernel.GetSector(dadr, a); ASSERT(a.mark = DirMark);
      L := 0; R := a.m; (*binary search*)
      WHILE L < R DO
        i := (L+R) DIV 2;
        IF name <= a.e[i].name THEN R := i ELSE L := i+1 END
      END ;
      IF (R < a.m) & (name = a.e[R].name) THEN A := a.e[R].adr (*found*)
      ELSIF R = 0 THEN dadr := a.p0
      ELSE dadr := a.e[R-1].p
      END ;
    UNTIL (dadr = 0) OR (A # 0)
  END Search;

END bugSearch.

(*
ORTool.DecObj bugSearch.rsc ~

ORTool 18.2.2013
decode bugSearch.rsc
bugSearch 98051420   1   492
imports:
	Kernel 97E012DD
type descriptors
 00000040 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000500 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
data     0
strings

code
   0	 4EE9041C	SUB SP SP   1052
   1	 AFE00000	STR  LNK SP       0
   2	 A0E00004	STR   R0 SP       4
   3	 A1E00008	STR   R1 SP       8
   4	 4000001D	MOV  R0  R0     29
   5	 A0E00018	STR   R0 SP      24
   6	 40000000	MOV  R0  R0      0
   7	 81E00008	LDR  R1 SP       8
   8	 A0100000	STR   R0  R1       0
   9	 80E00018	LDR  R0 SP      24
  10	 41E8001C	ADD  R1 SP     28
  11	 F710F00B	BL   61451
  12	 80E0001C	LDR  R0 SP      28
  13	 71009B1E	MOV'  R1  R0 -25826
  14	 4116A38D	IOR  R1  R1 -23667
  15	 00090001	SUB  R0  R0  R1
  16	 D9039D7C	BLNE  MT
  17	 40000000	MOV  R0  R0      0
  18	 A0E00010	STR   R0 SP      16
  19	 80E00020	LDR  R0 SP      32
  20	 A0E00014	STR   R0 SP      20
  21	 80E00010	LDR  R0 SP      16
  22	 81E00014	LDR  R1 SP      20
  23	 00090001	SUB  R0  R0  R1
  24	 ED00001C	BGE       28
  25	 80E00010	LDR  R0 SP      16
  26	 81E00014	LDR  R1 SP      20
  27	 00080001	ADD  R0  R0  R1
  28	 40020001	ASR  R0  R0      1
  29	 A0E0000C	STR   R0 SP      12
  30	 80E0000C	LDR  R0 SP      12
  31	 41090018	SUB  R1  R0     24
  32	 DA04141C	BLHI  MT
  33	 400A0028	MUL  R0  R0     40
  34	 00E80000	ADD  R0 SP  R0
  35	 81E00004	LDR  R1 SP       4
  36	 4008005C	ADD  R0  R0     92
  37	 92100000	LDR  R2  R1       0
  38	 41180001	ADD  R1  R1      1
  39	 93000000	LDR  R3  R0       0
  40	 40080001	ADD  R0  R0      1
  41	 04290003	SUB  R4  R2  R3
  42	 E9000002	BNE        2
  43	 44290000	SUB  R4  R2      0
  44	 E9FFFFF8	BNE       -8
  45	 EE000003	BGT        3
  46	 80E0000C	LDR  R0 SP      12
  47	 A0E00014	STR   R0 SP      20
  48	 E7000003	B       3
  49	 80E0000C	LDR  R0 SP      12
  50	 40080001	ADD  R0  R0      1
  51	 A0E00010	STR   R0 SP      16
  52	 E7FFFFE0	B     -32
  53	 80E00014	LDR  R0 SP      20
  54	 81E00020	LDR  R1 SP      32
  55	 00090001	SUB  R0  R0  R1
  56	 ED000019	BGE       25
  57	 80E00014	LDR  R0 SP      20
  58	 41090018	SUB  R1  R0     24
  59	 DA04691C	BLHI  MT
  60	 400A0028	MUL  R0  R0     40
  61	 00E80000	ADD  R0 SP  R0
  62	 81E00004	LDR  R1 SP       4
  63	 4008005C	ADD  R0  R0     92
  64	 92100000	LDR  R2  R1       0
  65	 41180001	ADD  R1  R1      1
  66	 93000000	LDR  R3  R0       0
  67	 40080001	ADD  R0  R0      1
  68	 04290003	SUB  R4  R2  R3
  69	 E9000002	BNE        2
  70	 44290000	SUB  R4  R2      0
  71	 E9FFFFF8	BNE       -8
  72	 E9000009	BNE        9
  73	 80E00014	LDR  R0 SP      20
  74	 41090018	SUB  R1  R0     24
  75	 DA04801C	BLHI  MT
  76	 400A0028	MUL  R0  R0     40
  77	 00E80000	ADD  R0 SP  R0
  78	 8000007C	LDR  R0  R0     124
  79	 81E00008	LDR  R1 SP       8
  80	 A0100000	STR   R0  R1       0
  81	 E700000D	B      13
  82	 80E00014	LDR  R0 SP      20
  83	 E9000003	BNE        3
  84	 80E00024	LDR  R0 SP      36
  85	 A0E00018	STR   R0 SP      24
  86	 E7000008	B       8
  87	 80E00014	LDR  R0 SP      20
  88	 40090001	SUB  R0  R0      1
  89	 41090018	SUB  R1  R0     24
  90	 DA04D01C	BLHI  MT
  91	 400A0028	MUL  R0  R0     40
  92	 00E80000	ADD  R0 SP  R0
  93	 80000080	LDR  R0  R0     128
  94	 A0E00018	STR   R0 SP      24
  95	 80E00018	LDR  R0 SP      24
  96	 E1000003	BEQ        3
  97	 80E00008	LDR  R0 SP       8
  98	 80000000	LDR  R0  R0       0
  99	 E1FFFFA5	BEQ      -91
 100	 8FE00000	LDR LNK SP       0
 101	 4EE8041C	ADD SP SP   1052
 102	 C700000F	B LNK
 103	 4EE90004	SUB SP SP      4
 104	 AFE00000	STR  LNK SP       0
 105	 8FE00000	LDR LNK SP       0
 106	 4EE80004	ADD SP SP      4
 107	 C700000F	B LNK
commands:
entries
   412     0
pointer refs

fixP =       11
fixD =        0
fixT =        0
entry =      412


OM4Tool.DecObj bugSearch.m4c ~

decode bugSearch.m4c
bugSearch 98051420   1   356
imports:
	Kernel 905A3AB2
type descriptors
 00000040 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000500 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
data     0
strings

code
commands:
entries
   278     0
pointer refs

fixP =       24
fixD =        0
fixT =        0
entry =      278
 00000000	 F5BD6D82	SUBS SP SP #1040
 00000004	     B403	PUSH R0 R1
 00000006	     B500	PUSH LR
 00000008	     201D	MOVS R0 #29
 0000000A	     9006	STR R0 [SP + 24]
 0000000C	     2000	MOVS R0 #0
 0000000E	     9902	LDR R1 [SP + 8]
 00000010	     6008	STR R0 [ R1 + 0]
 00000012	     9806	LDR R0 [SP + 24]
 00000014	 F11D011C	ADDS R1 SP #28
 00000018	 1100000C	BL Mod(  1) proc(16)
 0000001C	     9807	LDR R0 [SP + 28]
 0000001E	 F24A318D	MOV R1 #41869
 00000022	 F6C9311E	MOVT R1 #39710
 00000026	     4288	CMP R0 R1
 00000028	     BF18	IT NE
 0000002A	 EC0071D7	TrapNE 7 at pos 925
 0000002E	     2000	MOVS R0 #0
 00000030	     9004	STR R0 [SP + 16]
 00000032	     9808	LDR R0 [SP + 32]
 00000034	     9005	STR R0 [SP + 20]
 00000036	     9804	LDR R0 [SP + 16]
 00000038	     9905	LDR R1 [SP + 20]
 0000003A	     4288	CMP R0 R1
 0000003C	 F2808022	BGE #68, goes to  00000084
 00000040	     9804	LDR R0 [SP + 16]
 00000042	     9905	LDR R1 [SP + 20]
 00000044	     1840	ADDS R0 R0 R1
 00000046	     1040	ASRS R0 R0 #1
 00000048	     9003	STR R0 [SP + 12]
 0000004A	     9803	LDR R0 [SP + 12]
 0000004C	     2818	CMP R0 #24
 0000004E	     BF28	IT CS
 00000050	 EC008141	TrapCS 1 at pos 1044
 00000054	     2128	MOVS R1 #40
 00000056	     4348	MULS R0 R1 R0
 00000058	 EB1D0000	ADDS R0 SP R0 LSL #0
 0000005C	     9901	LDR R1 [SP + 4]
 0000005E	     305C	ADDS R0 #92
 00000060	 F8112B01	LDRB R2 [ R1 ] + 1
 00000064	 F8103B01	LDRB R3 [ R0 ] + 1
 00000068	     429A	CMP R2 R3
 0000006A	     D101	BNE #2, goes to  00000070
 0000006C	     2A00	CMP R2 #0
 0000006E	     D1F7	BNE #-18, goes to  00000060
 00000070	 F3008004	BGT #8, goes to  0000007C
 00000074	     9803	LDR R0 [SP + 12]
 00000076	     9005	STR R0 [SP + 20]
 00000078	 F000B803	B #6, goes to  00000082
 0000007C	     9803	LDR R0 [SP + 12]
 0000007E	     1C40	ADDS R0 R0 #1
 00000080	     9004	STR R0 [SP + 16]
 00000082	     E7D8	B #-80, goes to  00000036
 00000084	     9805	LDR R0 [SP + 20]
 00000086	     9908	LDR R1 [SP + 32]
 00000088	     4288	CMP R0 R1
 0000008A	 F2808023	BGE #70, goes to  000000D4
 0000008E	     9805	LDR R0 [SP + 20]
 00000090	     2818	CMP R0 #24
 00000092	     BF28	IT CS
 00000094	 EC008691	TrapCS 1 at pos 1129
 00000098	     2128	MOVS R1 #40
 0000009A	     4348	MULS R0 R1 R0
 0000009C	 EB1D0000	ADDS R0 SP R0 LSL #0
 000000A0	     9901	LDR R1 [SP + 4]
 000000A2	     305C	ADDS R0 #92
 000000A4	 F8112B01	LDRB R2 [ R1 ] + 1
 000000A8	 F8103B01	LDRB R3 [ R0 ] + 1
 000000AC	     429A	CMP R2 R3
 000000AE	     D101	BNE #2, goes to  000000B4
 000000B0	     2A00	CMP R2 #0
 000000B2	     D1F7	BNE #-18, goes to  000000A4
 000000B4	 F040800E	BNE #28, goes to  000000D4
 000000B8	     9805	LDR R0 [SP + 20]
 000000BA	     2818	CMP R0 #24
 000000BC	     BF28	IT CS
 000000BE	 EC009001	TrapCS 1 at pos 1152
 000000C2	     2128	MOVS R1 #40
 000000C4	     4348	MULS R0 R1 R0
 000000C6	 EB1D0000	ADDS R0 SP R0 LSL #0
 000000CA	     6FC0	LDR R0 [ R0 + 124]
 000000CC	     9902	LDR R1 [SP + 8]
 000000CE	     6008	STR R0 [ R1 + 0]
 000000D0	 F000B814	B #40, goes to  000000FC
 000000D4	     9805	LDR R0 [SP + 20]
 000000D6	     2800	CMP R0 #0
 000000D8	 F0408004	BNE #8, goes to  000000E4
 000000DC	     9809	LDR R0 [SP + 36]
 000000DE	     9006	STR R0 [SP + 24]
 000000E0	 F000B80C	B #24, goes to  000000FC
 000000E4	     9805	LDR R0 [SP + 20]
 000000E6	     1E40	SUBS R0 R0 #1
 000000E8	     2818	CMP R0 #24
 000000EA	     BF28	IT CS
 000000EC	 EC009501	TrapCS 1 at pos 1232
 000000F0	     2128	MOVS R1 #40
 000000F2	     4348	MULS R0 R1 R0
 000000F4	 EB1D0000	ADDS R0 SP R0 LSL #0
 000000F8	     7000	STRB R0 [ R0 + 0]
 000000FA	     9006	STR R0 [SP + 24]
 000000FC	     9806	LDR R0 [SP + 24]
 000000FE	     2800	CMP R0 #0
 00000100	 F0008004	BEQ #8, goes to  0000010C
 00000104	     9802	LDR R0 [SP + 8]
 00000106	     6800	LDR R0 [ R0 + 0]
 00000108	     2800	CMP R0 #0
 0000010A	     D082	BEQ #-252, goes to  00000012
 0000010C	 F85DEB04	LDR LR [ SP ] + 4
 00000110	 F51D6D83	ADDS SP SP #1048
 00000114	     4770	BX LR
 00000116	     B500	PUSH LR
 00000118	 F85DEB04	LDR LR [ SP ] + 4
 0000011C	     4770	BX LR

*)

