MODULE testLongInt;
  IMPORT L := SystemLog;

  TYPE Regs = RECORD A, B, C: LONGINT; PC: INTEGER END;

  PROCEDURE value(VAR r: Regs; c: INTEGER): LONGINT;
  BEGIN
    RETURN 3L
  END value;

  PROCEDURE run*;
    VAR r: Regs; arg: INTEGER;
  BEGIN r.A := 2024; r.A := r.A DIV LSL(1L, value(r, arg));
    L.DebugHex("r.A", r.A)
  END run;

(*
  PROCEDURE run2*;
    VAR r: Regs; arg: INTEGER; dvs: LONGINT;
  BEGIN r.A := 2024; dvs := LSL(1L, value(r, arg));
    L.DebugHex("r.A DIV LSL(1L, value(r, arg))", r.A DIV dvs)
  END run2;
*)

END testLongInt.

System.Free OM4P2 OM4G2 ~ OM4A2 OM4B2 OM4S2 ~ System.Free OM4Tool OM4D ~
OM4P2.Compile testLongInt.Mod/s ~ System.Free testLongInt ~ testLongInt.run testLongInt.run2

OM4Tool.DecObj testLongInt.m4c
decode testLongInt.m4c
testLongInt 1D710F9F   1    200
imports:
	SystemLog 07A9360A
type descriptors
 00000040 FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
data     0
strings
r.A|
code
commands:
	run   16
entries
 00000082 00000010
pointer refs

fixP =      118
fixD =      106
fixT =        0
entry =      130
 00000000	     B407	PUSH R0 R1 R2
 00000002	     B500	PUSH LR
 00000004	     2003	MOVS R0 #3
 00000006	     2100	MOVS R1 #0
 00000008	 F85DEB04	LDR LR [ SP ] + 4
 0000000C	     B003	ADD SP SP #12
 0000000E	     4770	BX LR
 00000010	     B088	SUB SP SP #32
 00000012	     B500	PUSH LR
 00000014	 F45F60FD	MOVS R0 #2024
 00000018	     2100	MOVS R1 #0
 0000001A	 E9CD0101	STRD R0 R1 [ SP + 4 ]
 0000001E	     A801	ADD R0 SP #4
 00000020	 10000010	MOV R1 lower 16-bits base(0)
 00000024	 00000000	MOVT R1 higher 16-bits base + 0
 00000028	     9A08	LDR R2 [ SP + 32 ]
 0000002A	 F7FFFFE9	BL #-46, goes to  00000000
 0000002E	     4602	MOV R2 R0
 00000030	     2001	MOVS R0 #1
 00000032	     2100	MOVS R1 #0
 00000034	 F1B20420	SUBS R4 R2 #32
 00000038	 FA10F404	LSLS R4 R0 R4
 0000003C	 F1D20320	RSBS R3 R2 #32
 00000040	     4091	LSLS R1 R1 R2
 00000042	 FA30F303	LSRS R3 R0 R3
 00000046	     4321	ORRS R1 R1 R4
 00000048	     4090	LSLS R0 R0 R2
 0000004A	     4319	ORRS R1 R1 R3
 0000004C	     4602	MOV R2 R0
 0000004E	     460B	MOV R3 R1
 00000050	 E9DD0101	LDRD R0 R1 [ SP + 4 ]
 00000054	     2A01	CMP R2 #1
 00000056	 F1730400	SBCS R4 R3 #0
 0000005A	     BFB8	IT LT
 0000005C	 EC0022C6	TrapLT 6 at pos 300
 00000060	     DF02	SVC #2
 00000062	     4610	MOV R0 R2
 00000064	     4619	MOV R1 R3
 00000066	 E9CD0101	STRD R0 R1 [ SP + 4 ]
 0000006A	 00000025	MOV R0 lower 16-bits base(0)
 0000006E	 00000014	MOVT R0 higher 16-bits base + 20
 00000072	     2104	MOVS R1 #4
 00000074	     9A01	LDR R2 [ SP + 4 ]
 00000076	 1010003B	BL Mod(  1) proc(1)
 0000007A	 F85DEB04	LDR LR [ SP ] + 4
 0000007E	     B008	ADD SP SP #32
 00000080	     4770	BX LR
 00000082	     B500	PUSH LR
 00000084	 F85DEB04	LDR LR [ SP ] + 4
 00000088	     4770	BX LR
