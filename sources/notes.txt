Piège thumb : l'ordre en mémoire des octets de l'instruction est bizarre :
15 14 13 12 11 10 9   8 7 6 5 4 3 2 1 0   15 14 13 12 11 10 9   8 7 6 5 4 3 2 1 0
     32-bit Thumb instruction, hw1            32-bit Thumb instruction, hw2
Byte at Address A+1   Byte at Address A   Byte at Address A+3  Byte at Address A+2

Piège Carry :
"In A32/T32 code, C is set in one of the following ways:

For an addition, including the comparison instruction CMN, C is set to 1
if the addition produced a carry (that is, an unsigned overflow), and to 0 otherwise.

For a subtraction, including the comparison instruction CMP, C is set to 0
if the subtraction produced a borrow (that is, an unsigned underflow), and to 1 otherwise."


Piège exécution dans SDRAM :
MPU or default memory map
-mismatch:on instruction access IACCVIOL(1)
1. Occurs on an access to an XN region even if the MPU is disabled.
- Sous debogueur, LDR R0, [R0] donne un résultat corrompu sur les 16 bits de poids faible
en mode handler si R0 conient une adresse SDRAM.

Possibilité pour implémenter le mécanisme Trap : générer une instruction illégale
pour un coprocesseur non existant, c'est à dire ni 10 ni 11

15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
 1  1  1     1  1                                |  coproc | 

Ce qui nous donne (Forme 0) (* Put0(op : BYTE; p : LONGINT *) : 
15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
 1  1  1  H  1  1           im14                   0        im11


On peut spécifier H:im14:im11 soit 26 bits de données contre 24 pour RISC-5,
donc ça devrait marcher.


Organisation de la mémoire:

1/ RISC-5

adresse     taille  description
-------     ------  -----------
000E 7EF0H          Limite de la mémoire
0008 0000H (67EF0H) Début du tas, fin de la pile
0007 8000H ( 8000H) Pile
0000 0100H (77F00H) Espace de chargement des modules avec desc. types, variable, code, ...
0000 0020H (   E0H) Table des modules pointée par le registre MT.
0000 0004H (   1CH) Variables système (MemLim (0CH) , HeapOrg (18H)=fin de la pile , ...)
0000 0000H (     4) Instruction de saut vers le point d'entrée du système

La pile est utilisée uniquement pendant l'exécution d'une commande ou d'une tâche de fond.
Dans l'implémentation RISC-5, sa taille est de 32ko.

2/ STM32F429

adresse     taille   description
-------     -------  -----------

1000 0000H ( 10000H) Pile logée dans la CCM

D080 0000H           Limite de la mémoire
D050 0000H (300000H) Début du tas
D020 1020H (2FEFE0H) Espace de chargement des modules avec desc. types, variable, code, ...
D020 1004H (    1CH) Variables système (MemLim (0CH) , StackOrg (18H)=fin de la pile , ...)
D020 1000H (      4) Instruction de saut vers le point d'entrée du système

Il n'y aura pas de table des modules, je vais reprendre l'idée développée dans Extended Oberon.

Le STM32F429 contient une mémoire attachée au coeur offrant 64ko. C'est le candidat idéal pour contenir la pile.
Ses limitations : utilisable uniquement par le coeur (pas de DMA) et pas de bit-banding.
Localisation CCM : 1000 0000H - 1000 FFFFH

L'instruction SVC sera utilisée pour exécuter des services matériels, valeur de retour dans R0 :
N° de service   Nom         R0                                                  R1                                      R2 et suivants
-------------   -------     --------------------------------------------------  ------------------------------------    ------------------------
            0   NEW         Adresse du pointeur vers la zone à allouer          Taille de la zone à allouer
            1   LED         <7:0> : un bit par LED à allumer (1) ou éteindre 0
            2   DivL        en entrée : mot de poids faible du dividende        mot de poids fort du dividende          R2: poids faible diviseur, R3 poids fort
                            en sortie : mot de poids faible du reste            mot de poids fort du reste              R2: poids faible quotient, R3 poids fort


Runtime checks:

trap number trap cause
1           array index out of range
2           type guard failure
3           array or string copy overflow
4           access via NIL pointer
5           illegal procedure call
6           integer division by zero
7           assertion violated
8           Bus Fault: data access precise error
9           Bus Fault: stack overflow
10          User abort

Memory Barrier Instructions:
Elle peuvent être placées à l'aide de la procédure SYSTEM.MBI(<type>)
type:
 1 DMB,
 2 DSB et
 3 ISB.

Module en mémoire Flash embarquée:
A faire:
- Modifier OM4L.Link pour appeler les blocs d'initialisation des modules liés.
- Créer OM4L.LinkEF à partir de OM4L.Link
